//Arrow Function

var sum = (a,b)=>{
    return (a+b);
}
undefined
sum();
NaN
sum(2);
NaN
sum(2,4);
6
console.dir(sum);
VM643:1 sum()arguments: (...)caller: (...)length: 2name: "sum"__proto__: ƒ ()[[FunctionLocation]]: VM427:3[[Scopes]]: Scopes[1]
undefined
function add(a,b){
    console.log('Add Function Called...');
}
undefined
console.dir(add);
VM854:1 ƒ add(a,b)length: 2name: "add"arguments: nullcaller: nullprototype: {constructor: ƒ}__proto__: ƒ ()[[FunctionLocation]]: VM786:1[[Scopes]]: Scopes[1]
undefined
function add(a,b){
    console.log('Add Function Called...');
    console.log(arguments);
}
undefined
add();
VM940:2 Add Function Called...
VM940:3 Arguments [callee: ƒ, Symbol(Symbol.iterator): ƒ]length: 0callee: ƒ add(a,b)Symbol(Symbol.iterator): ƒ values()__proto__: Object
undefined
add(2,3);
VM940:2 Add Function Called...
VM940:3 Arguments(2) [2, 3, callee: ƒ, Symbol(Symbol.iterator): ƒ]
undefined
function add(a,b){
    console.log('Add Function Called... ',a,b);
    console.log(arguments);
}
undefined
add(2,3);
VM1190:2 Add Function Called...  2 3
VM1190:3 Arguments(2) [2, 3, callee: ƒ, Symbol(Symbol.iterator): ƒ]
undefined
arr= [34,24,51,1,6,23];
(6) [34, 24, 51, 1, 6, 23]0: 341: 242: 513: 14: 65: 23length: 6__proto__: Array(0)length: 0constructor: ƒ Array()concat: ƒ concat()copyWithin: ƒ copyWithin()fill: ƒ fill()find: ƒ find()findIndex: ƒ findIndex()lastIndexOf: ƒ lastIndexOf()pop: ƒ pop()push: ƒ push()reverse: ƒ reverse()shift: ƒ shift()unshift: ƒ unshift()slice: ƒ slice()sort: ƒ sort()splice: ƒ splice()includes: ƒ includes()indexOf: ƒ indexOf()join: ƒ join()keys: ƒ keys()entries: ƒ entries()values: ƒ values()forEach: ƒ forEach()filter: ƒ filter()flat: ƒ flat()flatMap: ƒ flatMap()map: ƒ map()every: ƒ every()some: ƒ some()reduce: ƒ reduce()reduceRight: ƒ reduceRight()toLocaleString: ƒ toLocaleString()toString: ƒ toString()Symbol(Symbol.iterator): ƒ values()Symbol(Symbol.unscopables): {copyWithin: true, entries: true, fill: true, find: true, findIndex: true, …}__proto__: Object
console.dir(arr);
VM1349:1 Array(6)0: 341: 242: 513: 14: 65: 23length: 6__proto__: Array(0)length: 0constructor: ƒ Array()concat: ƒ concat()copyWithin: ƒ copyWithin()fill: ƒ fill()find: ƒ find()findIndex: ƒ findIndex()lastIndexOf: ƒ lastIndexOf()pop: ƒ pop()push: ƒ push()reverse: ƒ reverse()shift: ƒ shift()unshift: ƒ unshift()slice: ƒ slice()sort: ƒ sort()splice: ƒ splice()includes: ƒ includes()indexOf: ƒ indexOf()join: ƒ join()keys: ƒ keys()entries: ƒ entries()values: ƒ values()forEach: ƒ forEach()filter: ƒ filter()flat: ƒ flat()flatMap: ƒ flatMap()map: ƒ map()every: ƒ every()some: ƒ some()reduce: ƒ reduce()reduceRight: ƒ reduceRight()toLocaleString: ƒ toLocaleString()toString: ƒ toString()Symbol(Symbol.iterator): ƒ values()Symbol(Symbol.unscopables): {copyWithin: true, entries: true, fill: true, find: true, findIndex: true, …}__proto__: Object
undefined
function add(a,b){
    for(var item of arguments){
        console.log(item);
    }
}
undefined
function add(){
    for(var item of arguments){
        console.log(item);
    }
}
undefined
add(12,1,13,4,51,true);
VM1533:3 12
VM1533:3 1
VM1533:3 13
VM1533:3 4
VM1533:3 51
VM1533:3 true
undefined
function add(){
    var sum = 0;    

    for(var item of arguments){
        sum +=item;
    }
    console.log("SUM = ",sum);
}
undefined
add(1,2,3);
VM1782:7 SUM =  6
undefined
add(1,2,3,41,15);
VM1782:7 SUM =  62
undefined
function add(){
    var sum = 0;    

    for(var item of arguments){
        
        if(typeof item == 'string'){
            sum +=parseInt(item);
        }
        else{
            sum +=item;
        }
    
    }
    console.log("SUM = ",sum);
}
undefined
add(2,3,4);
VM2032:14 SUM =  9
undefined
add(2,3,4,"1","34");
VM2032:14 SUM =  44
undefined
typeof arr;
"object"
function add(){
    var sum = 0;    

    for(var item of arguments){
        
        if(typeof item == 'string'){
            sum +=parseInt(item);
        }
        else if(typeof item == 'object'){
            for(var element of item){
                sum += element;
            }
        }
        else{
            sum +=item;
        }
    
    }
    console.log("SUM = ",sum);
}
undefined
add(2,3,4,"20",[1,2,4]);
VM2525:19 SUM =  36
undefined
parseInt("one");
NaN
parseInt("one") +2;
NaN
add(2,3,4,"20",[1,2,4],"one");
VM2525:19 SUM =  NaN
undefined
function add(){
    var sum = 0;    

    for(var item of arguments){
        
        if(typeof item == 'string'){
            var temp = parseInt(item);
            
            if(temp != NaN){
                sum +=temp;
            }
        }
        else if(typeof item == 'object'){
            for(var element of item){
                sum += element;
            }
        }
        else{
            sum +=item;
        }
    
    }
    console.log("SUM = ",sum);
}
undefined
add(2,3,4,"20",[1,2,4],"one");
VM2881:23 SUM =  NaN
undefined
typeof "one";
"string"
parseInt("one");
NaN
if(parseInt("one") != NaN){
    console.log('Inside ..' );
}
VM3118:2 Inside ..
undefined
typeof parseInt("one");
"number"
typeof NaN;
"number"
parseInt("one") != 'NaN' 
true
function add(){
    var sum = 0;    

    for(var item of arguments){
        
        if(typeof item == 'string'){
            var temp = parseInt(item);
            
            if(temp != 'NaN'){
                sum +=temp;
            }
        }
        else if(typeof item == 'object'){
            for(var element of item){
                sum += element;
            }
        }
        else{
            sum +=item;
        }
    
    }
    console.log("SUM = ",sum);
}
undefined
add(2,3,4,"20",[1,2,4],"one");
VM3463:23 SUM =  NaN
undefined
parseInt("one") != NaN 
true
parseInt("one") == NaN 
false
parseInt("one") 
NaN
parseInt("one") == NaN 
false
function add(){
    var sum = 0;    

    for(var item of arguments){
        
        if(typeof item == 'string'){
            var temp = parseInt(item);
            
            if(temp >= 0 || temp<=9){
                sum +=temp;
            }
        }
        else if(typeof item == 'object'){
            for(var element of item){
                sum += element;
            }
        }
        else{
            sum +=item;
        }
    
    }
    console.log("SUM = ",sum);
}
undefined
add(2,3,4,"20",[1,2,4],"one");
VM3754:23 SUM =  36
undefined
add(2,3,4,"20",[1,2,4],"one",20);
VM3754:23 SUM =  56
undefined
parseInt('one');
NaN
typeof parseInt('one');
"number"
typeof NaN;
"number"
parseInt('one') == NaN;;
false
parseInt('one') != NaN;
true
parseInt('one') != 'NaN';
true
parseInt('one') == 'NaN';
false
NaN >0 
false
NaN <100; 
false
temp = "Vikrant";
"Vikrant"
temp[0];
"V"
temp[0].toUpperCase();
"V"
temp = "vikrant";
"vikrant"
temp[0].toUpperCase();
"V"
temp.substr(1);
"ikrant"
temp[0].toUpperCase() + temp.substr(1);
"Vikrant"
function formatting(str){
    formattedName = str[0];
    formattedName = formattedName.toUpperCase();
    formattedName += str.substr(1);
    console.log(formattedName);
}
formatting("vikrant");
VM4732:5 Vikrant
undefined
function print(){
    console.log('Print Function Call..');
}

function demo(func){
    console.log('Inside Demo Function');
    func();
}
undefined
demo(print);
VM5081:6 Inside Demo Function
VM5081:2 Print Function Call..
undefined
function print(){
    console.log('Print Function Call..');
}

function demo(func){
    console.log('Inside Demo Function');
    
}
undefined
demo(print);
VM5268:6 Inside Demo Function
undefined
function print(){
    console.log('Print Function Call..');
}

function demo(func){
    console.log('Inside Demo Function');
    func();
}
undefined
demo(print);
VM5295:6 Inside Demo Function
VM5295:2 Print Function Call..
undefined
arr
(6) [34, 24, 51, 1, 6, 23]
arr.push(100);
7
arr
(7) [34, 24, 51, 1, 6, 23, 100]
arr.unshift(100);
8
arr
(8) [100, 34, 24, 51, 1, 6, 23, 100]
arr.pop();
100
arr.shift();
100
arr.slice();
(6) [34, 24, 51, 1, 6, 23]
arr.slice(2);
(4) [51, 1, 6, 23]
arr.slice(1,5);
(4) [24, 51, 1, 6]
arr.splice(2,2);
(2) [51, 1]
arr
(4) [34, 24, 6, 23]
arr.push(51);
5
arr.push(100);
6
arr.push(120);
7
arr
(7) [34, 24, 6, 23, 51, 100, 120]
arr.splice(2,2,900,800);
(2) [6, 23]
arr
(7) [34, 24, 900, 800, 51, 100, 120]
arr = [];
[]
arr
[]
arr = 34;
34
arr.push(120);
VM6276:1 Uncaught TypeError: arr.push is not a function
    at <anonymous>:1:5
(anonymous) @ VM6276:1
arr = [];
[]
arr.push(120);
1
arr.push(100);
2
arr.push(51);
3
arr
(3) [120, 100, 51]
arr.splice();
[]
arr.splice(0);
(3) [120, 100, 51]
arr
[]
arr.push(51);
1
arr.push(120);
2
arr.push(100);
3
arr
(3) [51, 120, 100]
arr.splice(1);
(2) [120, 100]
arr
[51]
arr = [12,41,5,16,700,299,304];
(7) [12, 41, 5, 16, 700, 299, 304]
//Traversing Array

for(var i=0;i<arr.length ;i++){
    console.log(i);
}
VM7019:4 0
VM7019:4 1
VM7019:4 2
VM7019:4 3
VM7019:4 4
VM7019:4 5
VM7019:4 6
undefined
//Traversing Array

for(var i=0;i<arr.length ;i++){
    console.log(arr[i]);
}
VM7085:4 12
VM7085:4 41
VM7085:4 5
VM7085:4 16
VM7085:4 700
VM7085:4 299
VM7085:4 304
undefined
//Traversing Array

for( var item of arr ){
    console.log(item);
}
VM7184:4 12
VM7184:4 41
VM7184:4 5
VM7184:4 16
VM7184:4 700
VM7184:4 299
VM7184:4 304
undefined
//Foreach
function print(str){
    console.log(str);
}

arr.forEach(print);
VM7433:3 12
VM7433:3 41
VM7433:3 5
VM7433:3 16
VM7433:3 700
VM7433:3 299
VM7433:3 304
undefined
//Foreach

arr.forEach( function(element){
     console.log(element);   
} );
VM7626:4 12
VM7626:4 41
VM7626:4 5
VM7626:4 16
VM7626:4 700
VM7626:4 299
VM7626:4 304
undefined
//Foreach

arr.forEach( (element)=>{
     console.log(element);   
} );
VM7722:4 12
VM7722:4 41
VM7722:4 5
VM7722:4 16
VM7722:4 700
VM7722:4 299
VM7722:4 304
undefined
//Foreach

arr.forEach( (element)=> console.log(element) );
VM7775:3 12
VM7775:3 41
VM7775:3 5
VM7775:3 16
VM7775:3 700
VM7775:3 299
VM7775:3 304
undefined
//Foreach

arr.forEach( (element)=> element );
undefined
arr.filter( function(element){
     
    return element%2 == 1;
} );
(3) [41, 5, 299]
arr.filter( function(element){
     
    element%2 == 1;
} );
[]
//FIlter

arr.filter
ƒ filter() { [native code] }
//FIlter

arr.filter( (element)=>element%2 ==1 );
(3) [41, 5, 299]
//FInd
arr.find( function(element){
    return element == 100;
} );
undefined
//FInd
arr.find( function(element){
    return element == 700;
} );
700
//FInd
arr.findIndex( function(element){
    return element == 700;
} );
4
arr.sort();
(7) [12, 16, 299, 304, 41, 5, 700]
arr.sort( function(a,b){
    return a-b;
});
(7) [5, 12, 16, 41, 299, 304, 700]
arr.sort( function(a,b){
    return b-a;
});
(7) [700, 304, 299, 41, 16, 12, 5]
arr.sort((a,b)=>a-b);
(7) [5, 12, 16, 41, 299, 304, 700]
arr.sort((a,b)=>b-a);
(7) [700, 304, 299, 41, 16, 12, 5]
arr.map(function(element){
    return element+5;
});
(7) [705, 309, 304, 46, 21, 17, 10]
arr.reverse();
(7) [5, 12, 16, 41, 299, 304, 700]
arr
(7) [5, 12, 16, 41, 299, 304, 700]
arr.reduce( function(acc,curr){
    acc +=curr;
})
undefined
arr.reduce( function(acc,curr){
    return acc +=curr;
})
1377
arr
(7) [5, 12, 16, 41, 299, 304, 700]
arr.reduce( function(acc,curr){
    return acc +=curr;
});
1377
